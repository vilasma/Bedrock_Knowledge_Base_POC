name: CI/CD - Deploy CloudFormation PoC

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the deployment environment"
        required: true
        default: dev
        type: choice
        options:
          - dev

jobs:
  package-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install zip
        run: sudo apt-get update && sudo apt-get install -y zip

      # ------------------ Build Lambda layer ------------------
      - name: Build Lambda layer (cryptography + psycopg2-binary)
        run: |
          mkdir -p layer_build
          docker run --rm -v $PWD/layer_build:/lambda-layer amazonlinux:2 /bin/bash -c "
            yum update -y
            yum install -y python3.11 python3.11-devel gcc libffi-devel zip
            python3.11 -m ensurepip
            python3.11 -m pip install --upgrade pip
            mkdir -p /lambda-layer/python
            python3.11 -m pip install cryptography psycopg2-binary -t /lambda-layer/python
            cd /lambda-layer
            zip -r9 /lambda-layer/ingest-dependencies-layer.zip python
          "

      - name: Upload Lambda layer to S3
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          BUCKET_NAME=$(echo "${{ secrets.CFN_CODE_BUCKET }}" | sed -E 's#^arn:aws:s3:::(.+)$#\1#')
          aws s3 cp layer_build/ingest-dependencies-layer.zip s3://$BUCKET_NAME/lambda/ingest-dependencies-layer.zip --region $AWS_REGION

      # ------------------ Package ingest Lambda ------------------
      - name: Prepare ingest Lambda package
        run: |
          mkdir -p package
          python -m pip install --upgrade pip
          pip install --target ./package -r lambda/requirements.txt --no-deps
          cp lambda/ingest.py ./package/
          pushd package
          zip -r ../ingest.zip .
          popd

      # ------------------ Package Knowledge Base Handler Lambda ------------------
      - name: Prepare Knowledge Base Handler package
        run: |
          mkdir -p package
          cp lambda/knowledgebase_handler.py ./package/
          pushd package
          zip -r ../knowledgebase_handler.zip .
          popd

      # ------------------ Package init_db Lambda ------------------
      - name: Prepare init_db package
        run: |
          mkdir -p package
          cp lambda/init_db.py ./package/
          pushd package
          zip -r ../init_db.zip .
          popd

      # ------------------ Upload Lambda artifacts ------------------
      - name: Upload ingest Lambda artifact to S3
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          BUCKET_NAME=$(echo "${{ secrets.CFN_CODE_BUCKET }}" | sed -E 's#^arn:aws:s3:::(.+)$#\1#')
          aws s3 cp ingest.zip s3://$BUCKET_NAME/lambda/ingest.zip --region $AWS_REGION

      - name: Upload Knowledge Base Handler artifact to S3
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          BUCKET_NAME=$(echo "${{ secrets.CFN_CODE_BUCKET }}" | sed -E 's#^arn:aws:s3:::(.+)$#\1#')
          aws s3 cp knowledgebase_handler.zip s3://$BUCKET_NAME/lambda/knowledgebase_handler.zip --region $AWS_REGION

      - name: Upload init_db Lambda artifact to S3
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          BUCKET_NAME=$(echo "${{ secrets.CFN_CODE_BUCKET }}" | sed -E 's#^arn:aws:s3:::(.+)$#\1#')
          aws s3 cp init_db.zip s3://$BUCKET_NAME/lambda/init_db.zip --region $AWS_REGION

      # ------------------ Deploy CloudFormation ------------------
      - name: Deploy CloudFormation
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws cloudformation deploy \
            --template-file cft/template.yml \
            --stack-name bedrock-s3-ingest-poc \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              IngestLambdaS3Bucket=${{ secrets.CFN_CODE_BUCKET }} \
              IngestLambdaS3Key=lambda/ingest.zip \
              KnowledgeBaseHandlerS3Bucket=${{ secrets.CFN_CODE_BUCKET }} \
              KnowledgeBaseHandlerS3Key=lambda/knowledgebase_handler.zip \
              InitDBLambdaS3Bucket=${{ secrets.CFN_CODE_BUCKET }} \
              InitDBLambdaS3Key=lambda/init_db.zip \
              DBUsername=poc_admin \
              DBName=bedrock_poc \
            --region $AWS_REGION
